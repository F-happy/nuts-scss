@charset "UTF-8";
@import "settings";

//背景图片处理
@mixin backgroundImg($value) {
    background: $value no-repeat;
    background-size: 100% auto;
}

// 出多少宽度则显示省略号
%ellipsis-basic {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

@mixin ellipsis($width:100%) {
    @extend %ellipsis-basic;
    width: $width;
}

//盒子布局函数
@mixin box($align: center, $pack: center) {
    @each $prefix in $prefix-list {
        display: -#{$prefix}-box;
        -#{$prefix}-box-align: $align;
        -#{$prefix}-box-pack: $pack;
    }
}

// prefixer
// 用于在属性上加前缀
@mixin prefixer($property, $value, $prefixes: $prefix-list) {
    @each $prefix in $prefixes {
        @if $prefix == webkit {
            -webkit-#{$property}: $value;
        } @else if $prefix == moz {
            -moz-#{$property}: $value;
        } @else if $prefix == ms {
            -ms-#{$property}: $value;
        } @else if $prefix == o {
            -o-#{$property}: $value;
        }
    }
    @if $prefixNo {
        #{$property}: $value;
    }
}

// 设置元素的圆角
@mixin border-radius($value) {
    @include prefixer(border-radius, $value);
}

// 将元素变为圆形
@mixin border-box($value) {
    width: $value;
    height: $value;
    @include border-radius(50%);
}

// 清除浮动
@mixin clearfix() {
    &:before, &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

// 内阴影和外阴影
@mixin box-emboss($opacity, $opacity2) {
    box-shadow: white($opacity) 0 1px 0, inset black($opacity2) 0 1px 0;
}

// 透明度
@mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie); //IE8
}

// 三角形模块
@mixin triangle($direction, $size, $borderColor) {
    content: "";
    height: 0;
    width: 0;
    overflow: hidden;
    @if $direction == top {
        border-bottom: $size solid $borderColor;
        border-left: $size dashed transparent;
        border-right: $size dashed transparent;
    } @else if $direction == right {
        border-left: $size solid $borderColor;
        border-top: $size dashed transparent;
        border-bottom: $size dashed transparent;
    } @else if $direction == bottom {
        border-top: $size solid $borderColor;
        border-left: $size dashed transparent;
        border-right: $size dashed transparent;
    } @else if $direction == left {
        border-right: $size solid $borderColor;
        border-top: $size dashed transparent;
        border-bottom: $size dashed transparent;
    }
}

// Gradients
// 水平渐变，从左往右
// @include gradient-horizontal(#333, #ccc);
// https://developer.mozilla.org/zh-CN/docs/Web/CSS/linear-gradient
@mixin gradient-horizontal($gradient...) {
    @each $prefix in $prefix-list {
        background-image: -#{$prefix}-linear-gradient(left, $gradient);
    }
    background-image: linear-gradient(to right, $gradient); // Standard, IE10
}

// 水平渐变，从左往右，平铺
// @include gradient-horizontal-repeating(#333 5%, #ccc 10%);
@mixin gradient-horizontal-repeating($gradient...) {
    @each $prefix in $prefix-list {
        background-image: -#{$prefix}-repeating-linear-gradient(left, $gradient);
    }
    background-image: repeating-linear-gradient(to right, $gradient); // Standard, IE10
}

// 垂直渐变，从上往下
// @include gradient-vertical(#333 30%, #ccc);
@mixin gradient-vertical($gradient...) {
    @each $prefix in $prefix-list {
        background-image: -#{$prefix}-linear-gradient(top, $gradient);
    }
    background-image: linear-gradient(to bottom, $gradient); // Standard, IE10
}

// 垂直渐变，从上往下，平铺
// @include gradient-vertical-repeating(#333 30%, #ccc 50%);
@mixin gradient-vertical-repeating($gradient...) {
    @each $prefix in $prefix-list {
        background-image: -#{$prefix}-repeating-linear-gradient(top, $gradient);
    }
    background-image: repeating-linear-gradient(to bottom, $gradient); // Standard, IE10
}

// 角度渐变
// @include gradient-angle(45deg, #333 30%, #ccc);
@mixin gradient-angle($gradient...) {
    @each $prefix in $prefix-list {
        background-image: -#{$prefix}-linear-gradient($gradient);
    }
    background-image: linear-gradient($gradient); // Standard, IE1
}

// 角度渐变
// @include gradient-angle(45deg, #333 30%, #ccc 50%);
@mixin gradient-angle-repeating($gradient...) {
    @each $prefix in $prefix-list {
        background-image: -#{$prefix}-repeating-linear-gradient($gradient);
    }
    background-image: repeating-linear-gradient($gradient); // Standard, IE1
}

// 径向渐变，可以写点简单的
// 如：@include gradient-radial(#00f,#fff);
@mixin gradient-radial($gradient...) {
    @each $prefix in $prefix-list {
        background-image: -#{$prefix}-radial-gradient($gradient) no-repeat;
    }
    background-image: radial-gradient($gradient) no-repeat; // Standard, IE1
}
